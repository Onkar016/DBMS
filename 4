
create table borrower(RollIN int primary key , Name varchar(20), DateofIssue date, NameofBook varchar(20), status varchar(20));

create table fine(RollNO int, foreign key(RollNo) references borrower(RollIN), ReturnDate date, Amount int);

insert into borrower(RollIN, Name, DateofIssue, NameofBook, status) values
(1, 'onkar', '2020-05-15', 'DMS', 'PENDING'),
(2, 'nikhil', '2022-12-12', 'SPOS', 'PENDING'),
(3, 'ram', '2023-12-12', 'Cns', 'PENDING');

select * from borrower;

delimiter $$

CREATE PROCEDURE om(in roll int)

  BEGIN

  DECLARE totalfine int;

   DECLARE noofdays int;

    DECLARE issuedate date;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION SELECT 'CREATE TABLE DEFINITION';

     SELECT DateofIssue INTO issuedate FROM borrower WHERE RollIn=roll;

     SELECT DATEDIFF(CURDATE(),issuedate) INTO noofdays;

     IF noofdays > 15 AND noofdays < 30 THEN SET totalfine = noofdays * 5;

     INSERT INTO fine VALUES(roll,CURDATE(),totalfine);

     ELSEIF noofdays > 30 THEN SET totalfine = ((noofdays-30)*50)+15*5;

    INSERT INTO fine VALUES(roll,CURDATE(),totalfine);

     ELSE INSERT INTO fine VALUES(roll,CURDATE(),0);

     END IF;

     UPDATE borrower SET status='RETURN' WHERE rollIn=roll;

     END $$




call om(1) ; $$

call om(2) ; $$

select * from fine; $$

select * from borrower;
